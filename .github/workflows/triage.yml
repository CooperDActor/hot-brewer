name: Triage

on: pull_request

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Request Info
        run: |
           cat <<"EOF"
             ${{ toJSON(github.event) }}
           EOF

      - name: Check date
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            })

            const reviewStartDate = new Date(pullRequest.created_at)
            const reviewEndDate = new Date(reviewStartDate)
            switch (reviewStartDate.getDay()) {
              // Skip from Friday to Monday and from Saturday to Tuesday.
              case 5:
              case 6:
                reviewEndDate.setDate(reviewStartDate.getDate() + 3)
                break
              // Skip from Sunday to Tuesday.
              case 0:
                reviewEndDate.setDate(reviewStartDate.getDate() + 2)
                break
              default:
                reviewEndDate.setDate(reviewStartDate.getDate() + 1)
                break
            }

            const currentDate = new Date()
            const reviewEnded = currentDate > reviewEndDate

            const reviewLabel = "waiting for feedback"


            if (reviewEnded) {
              core.warning(`Review period ended at ${reviewEndDate}.`)

              await github.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: reviewLabel,
              })
            } else {
              core.warning(`Review period will end at ${reviewEndDate}.`)

              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `Review period will end at ${reviewEndDate}.`
              })

              await github.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: [reviewLabel],
              })
            }
